#!/usr/bin/env node

'use strict';

var inquirer = require('inquirer');

require('shelljs/global');
require('colors');

if (!which('git')) {
  echo('Sorry, this script requires Git'.yellow);
  exit(1);
}

var getChangesCall = exec('git status --porcelain', { silent: true });
var changed = [];

if (getChangesCall.code === 0) {
  changed = getChangesCall.output.split('\n');
  changed.pop();
}

if (!changed.length) {
  echo('No files to add'.yellow);
  exit(0);
}

changed = changed
  .sort(function (file1, file2) {
    var f1 = file1.substring(2).toLowerCase();
    var f2 = file2.substring(2).toLowerCase();

    if (f1 < f2) {
      return -1;
    } else if (f1 > f2) {
      return 1;
    } else {
      return 0;
    }
  })
  .map(function (file) {
    return {
      status: file.substring(0, 2),
      path: file.substring(3)
    };
  });

inquirer.prompt({
  type: 'checkbox',
  message: 'Select files to stage, deselect to unstage.',
  name: 'stage',
  choices: changed.map(function (file) {
    var path;

    switch (file.status) {
      case 'D ':
      case ' D':
        path = ('- ' + file.path).red;
        break;
      case 'A ':
      case 'AM':
      case '??':
        path = ('+ ' + file.path).green;
        break;
      case 'M ':
      case ' M':
      case 'MM':
        path = ('  ' + file.path).yellow;
        break;
      case 'R ':
      case 'RM':
        path = ('R ' + file.path).yellow;
        break;
      default:
        path = '  ' + file.path;
    }

    return {
      name: path,
      value: file,
      checked: /M |A |R |RM|D /.test(file.status)
    };
  })
}, function (answers) {
  var ui = new inquirer.ui.BottomBar();
  var stage = answers.stage;
  var unstage = changed.filter(function (file) {
    return stage.indexOf(file) === -1;
  });

  stage.forEach(function (file) {
    ui.updateBottomBar('Staging: ' + file.path + '\n');
    exec('git add -A ' + file.path, { silent: true });
  });

  unstage.forEach(function (file) {
    ui.updateBottomBar('Unstaging: ' + file.path + '\n');
    exec('git reset -- ' + file.path, { silent: true });
  });
  exit(0);
});



